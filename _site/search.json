[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Tarun Naga Venkata Durga Saikumar M",
    "section": "",
    "text": "Cybersecurity & AI,ML Enthusiastic\nIn the realm of projects, Tarun’s portfolio boasts a Lung Cancer Detection project utilizing Convolutional Neural Networks (CNN) and data augmentation techniques to enhance dataset quality and model robustness. Additionally, the Cryptocurrency Price Analytics project showcases proficiency in AI, Python, and Django, with the creation of an artificial neural network and Long Short-Term Memory (LSTM) model for accurate price predictions.\nWith a strong academic foundation and a passion for data science, I exhibits a proven track record of excellence, making him an invaluable asset to any data science endeavor"
  },
  {
    "objectID": "mtnvdsk.html",
    "href": "mtnvdsk.html",
    "title": "Tarun Naga Venkata Durga Saikumar M",
    "section": "",
    "text": "Cybersecurity & AI,ML Enthusiastic\nIn the realm of projects, Tarun’s portfolio boasts a Lung Cancer Detection project utilizing Convolutional Neural Networks (CNN) and data augmentation techniques to enhance dataset quality and model robustness. Additionally, the Cryptocurrency Price Analytics project showcases proficiency in AI, Python, and Django, with the creation of an artificial neural network and Long Short-Term Memory (LSTM) model for accurate price predictions.\nWith a strong academic foundation and a passion for data science, I exhibits a proven track record of excellence, making him an invaluable asset to any data science endeavor"
  },
  {
    "objectID": "posts/Cryptocurrency Price Analytics using AI/index.html",
    "href": "posts/Cryptocurrency Price Analytics using AI/index.html",
    "title": "Cryptocurrency Price Analytics using AI",
    "section": "",
    "text": "Designed and implemented an artificial neural network (ANN) model using TensorFlow to predict future cryptocurrency prices based on historical price data. Built a long short-term memory (LSTM) model to improve prediction accuracy by considering the temporal nature of cryptocurrency price movements. Built an offline Django website that provides users with a user-friendly interface to access and visualize the predictions made by the ANN and LSTM model.\nGithub link"
  },
  {
    "objectID": "posts/Data Analaysis of Telanagan Government/index.html",
    "href": "posts/Data Analaysis of Telanagan Government/index.html",
    "title": "Data Analysis for Telegana Government",
    "section": "",
    "text": "Objectives:\n• Explore Stamp Registration, Transportation and Ts-Ipass Datasets. Understand their attributes, categories and time period.\n• Analyze trends and patterns within each department.\n• Identify growth opportunities and areas needing attention.\n• Find correlation among these departments and report the overall growth of the state through insights and relevant visuals such as shape maps.\nPrimary Questions:\nStamp Registration\n\n#fact_stamps.shape()\n\n(1504, 6)\n\n#fact_stamps.head()\n\n\n\n\n\n\n\n\n\n\n\ndist_code month\ndocuments_registered_cnt\ndocuments_registered_rev\nestamps_challans_cnt\nestamps_challans_rev\n\n\n\n\n0\n14_1\n2019-04-01\n4533\n59236363\n\n\n1\n17_3\n2019-04-01\n4151\n41508762\n\n\n2\n20_3\n2019-04-01\n2116\n23674170\n\n\n3\n21_5\n2019-04-01\n1089\n15915285\n\n\n4\n23_1\n2019-04-01\n6133\n82593256\n\n\n\n\n#m=fact_stamps.merge(dim_districts,on=\"dist_code\",how=\"left\")\n#m.head()\n\n\n\n\n\n\n\n\n\n\n\n\n\ndist_code\nmonth\ndocuments_registered_cnt\ndocuments_registered_rev\nestamps_challans_cnt\nestamps_challans_rev\ndistrict\n\n\n\n\n14_1\n2019-04-01\n4533\n59236363\n0\n0\nMahabubnagar\n\n\n17_3\n2019-04-01\n4151\n41508762\n0\n0\nSiddipet\n\n\n20_3\n2019-04-01\n2116\n23674170\n0\n0\nRajanna Sircilla\n\n\n21_5\n2019-04-01\n1089\n15915285\n0\n0\nMahabubabad\n\n\n23_1\n2019-04-01\n6133\n82593256\n0\n0\nNalgonda\n\n\n\n\n#m[\"year\"]=pd.DatetimeIndex(m.month).year\n#m[\"total_revenue\"]=m[\"documents_registered_rev\"]+m[\"estamps_challans_rev\"]\n#m.head()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndist_code\nmonth\ndocuments_registered_cnt\ndocuments_registered_rev\nestamps_challans_cnt\nestamps_challans_rev\ndistrict\nyear\ntotal_revenue\n\n\n\n\n14_1\n2019-04-01\n4533\n59236363\n0\n0\nMahabubnagar\n2019\n59236363\n\n\n17_3\n2019-04-01\n4151\n41508762\n0\n0\nSiddipet\n2019\n41508762\n\n\n20_3\n2019-04-01\n2116\n23674170\n0\n0\nRajanna Sircilla\n2019\n23674170\n\n\n21_5\n2019-04-01\n1089\n15915285\n0\n0\nMahabubabad\n2019\n15915285\n\n\n23_1\n2019-04-01\n6133\n82593256\n0\n0\nNalgonda\n2019\n82593256\n\n\n\n\n#filtered_data = m[(m['year'] &gt;= 2019) & (m['year'] &lt;= 2022)]\n\n# Group data by district and calculate the total revenue for each district in 2019 and 2022\n#district_revenue_2019 = filtered_data[filtered_data['year'] == 2019].groupby('district')['total_revenue'].sum()\n#district_revenue_2022 = filtered_data[filtered_data['year'] == 2022].groupby('district')['total_revenue'].sum()\n\n# Calculate the revenue growth for each district\n#revenue_growth = (district_revenue_2022 - district_revenue_2019) / district_revenue_2019\n\n# Sort districts by revenue growth in descending order and get the top 5\n#top_5_districts = revenue_growth.sort_values(ascending=False).head(5)\n\n# Print the top 5 districts with the highest revenue growth\n#print(top_5_districts)\n\ndistrict\nMulugu 6.285740\nAdilabad 4.895097\nBhadradri Kothagudem 4.330842\nMancherial 4.327274\nKarimnagar 4.079940\nName: total_revenue, dtype: float64\n1. How does the revenue generated from document registration vary across districts in Telangana? List down the top 5 districts that showed the highest document registration revenue growth between FY 2019 and 2022.\nTop 5 districts with registration revenue are\n1.Mulugu\n2.Adilabad\n3.Bhadradri Kothagudem\n4.Mancherial\n5.Karimnagar\n\n\n\n#fy22=m[(m[\"year\"]==2022)]\n#a=fy22.groupby(['year','district'])['estamps_challans_rev'].sum().reset_index()\n#b=fy22.groupby(['year','district'])['documents_registered_rev'].sum().reset_index()\n#fy22=pd.DataFrame({\n#    \"districts\": a[\"district\"],\n#    \"estamps_challans_rev\": a.estamps_challans_rev,\n#    \"documents_registered_rev\": b.documents_registered_rev,\n#    \"year\":a.year\n#})\n#fy22[(fy22.estamps_challans_rev&gt;fy22.documents_registered_rev)].sort_values(by=\"estamps_challans_rev\",ascending=False).head(5)\n\n\n\n\ndistricts\nestamps_challans_rev\ndocuments_registered_rev\nyear\n\n\n\n\n24\nRangareddy\n39955444951\n39465527338\n\n\n15\nMedchal_Malkajgiri\n24394118384\n24264692242\n\n\n3\nHyderabad\n13959081475\n13860437338\n\n\n25\nSangareddy\n8371737803\n8279206192\n\n\n2\nHanumakonda\n2911182033\n2891014228\n\n\n\n2.How does the revenue generated from document registration compare to the revenue generated from e-stamp challans across districts? List down the top 5 districts where e-stamps revenue contributes significantly more to the revenue than the documents in FY 2022? These are the districts where the estamps revenue contributes more compared to document registration revenue\n1.Rangareddy\n2.Medchal_Malkajgiri\n3.Hyderabad\n4.Sangareddy\n5.Hanumankonda\n\n\n#a=m.groupby(['year','district'])['estamps_challans_cnt'].sum().reset_index()\n#b=m.groupby(['year','district'])['documents_registered_cnt'].sum().reset_index()\n#b.documents_registered_cnt\n#fy=pd.DataFrame({\n#    \"districts\": a[\"district\"],\n#    \"estamps_challans_cnt\": a.estamps_challans_cnt,\n#    \"documents_registered_cnt\": b.documents_registered_cnt,\n#    \"year\":a.year\n#})\n\n\n#fy[\"percentage\"] = ((fy[\"documents_registered_cnt\"] - fy[\"estamps_challans_cnt\"]) / #fy[\"estamps_challans_cnt\"]) * 100\n# Identify years with significant changes\n#significant_changes = fy[fy[\"percentage\"].abs() &gt; 10]\n\n#print(\"Years with significant changes:\")\n#significant_changes\n\nYears with significant changes:\n\n\n\n\n\n\n\n\n\n\ndistricts\nestamps_challans_cnt\ndocuments_registered_cnt\nyear\npercentage\n\n\n\n\nAdilabad\n0\n9024\n2019\ninf\n\n\nBhadradri Kothagudem\n0\n5960\n2019\ninf\n\n\nHanumakonda\n0\n45134\n2019\ninf\n\n\nHyderabad\n0\n46667\n2019\ninf\n\n\nJagtial\n0\n21889\n2019\ninf\n\n\n…\n…\n…\n…\n…\n\n\nWarangal\n280\n9142\n2020\n3165.000000\n\n\nYadadri\nBhuvanagiri\n2487\n43397\n2020\n\n\nAdilabad\n14848\n12807\n2021\n-13.745959\n\n\nBhadradri\nKothagudem\n2636\n2275\n2023\n\n\nSiddipet\n11600\n12957\n2023\n11.698276\n\n\n\n3.Is there any alteration of e-Stamp challan count and document registration count pattern since the implementation of e-Stamp challan? If so, what suggestions would you propose to the government? The implementation of the estamp resulting in the massive increase and need to improve its services like adding more documents to it to ease the process of registration\n\n4.Categorize districts into three segments based on their stamp registration revenue generation during the fiscal year 2021 to 2022.\n\n#fy20_21=m[(m[\"year\"]!=2019) & (m[\"year\"]!=2020)]\n#district_total_revenue = fy20_21.groupby(\"district\")[\"total_revenue\"].sum()\n#low = district_total_revenue.quantile(0.33)\n#high = district_total_revenue.quantile(0.66)\n#district_total_revenue.head()\n\ndistrict\nAdilabad 1623944329\nBhadradri Kothagudem 1197512200\nHanumakonda 11198412335\nHyderabad 55765536121\nJagtial 2376689031\nName: total_revenue, dtype: int64\n\n\n#district_total_revenue_categories=pd.cut(district_total_revenue,bins=[0, low, high, float('inf')],labels=['Low', 'Medium', 'High'])\n#districts_categorized = pd.DataFrame({\n#    \"District\": district_total_revenue.index,\n#    \"Total_Revenue\": district_total_revenue.values,\n#    \"Revenue_Category\": district_total_revenue_categories\n#})\n#districts_categorized.head()\n\n\n\n\n\nDistrict\nTotal_Revenue\nRevenue_Category\n\n\n\n\ndistrict\n\n\n\n\n\nAdilabad\nAdilabad\n1623944329\nLow\n\n\nBhadradri Kothagudem\nBhadradri Kothagudem\n1197512200\nLow\n\n\nHanumakonda\nHanumakonda\n11198412335\nHigh\n\n\nHyderabad\nHyderabad\n55765536121\nHigh\n\n\nJagtial\nJagtial\n2376689031\nMedium\n\n\n\nTransport data analysis\n\n#fact_transport.info()\n\n&lt;class ‘pandas.core.frame.DataFrame’&gt;\nRangeIndex: 1440 entries, 0 to 1439\nData columns (total 18 columns):\n# Column Non-Null Count Dtype\n\n0 dist_code 1440 non-null object\n1 month 1440 non-null object\n2 fuel_type_petrol 1440 non-null int64\n3 fuel_type_diesel 1440 non-null int64\n4 fuel_type_electric 1440 non-null int64\n5 fuel_type_others 1440 non-null int64\n6 vehicleClass_MotorCycle 1440 non-null int64\n7 vehicleClass_MotorCar 1440 non-null int64\n8 vehicleClass_AutoRickshaw 1440 non-null int64\n9 vehicleClass_Agriculture 1440 non-null int64\n10 vehicleClass_others 1440 non-null int64\n11 seatCapacity_1_to_3 1440 non-null int64\n12 seatCapacity_4_to_6 1440 non-null int64\n13 seatCapacity_above_6 1440 non-null int64\n14 Brand_new_vehicles 1440 non-null int64\n15 Pre-owned_vehicles 1440 non-null int64\n16 category_Non-Transport 1440 non-null int64\n17 category_Transport 1440 non-null int64\ndtypes: int64(16), object(2)\n\n#fact_transport.shape\n\n(1440, 18)\n\n#m=fact_transport.merge(dim_districts,on=\"dist_code\",how=\"left\")\n#m[\"year\"]=pd.DatetimeIndex(m.month).year\n#m.head()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndist_code\nmonth\nfuel_type_petrol\nfuel_type_diesel\nfuel_type_electric\nfuel_type_others\nvehicleClass_MotorCycle\nvehicleClass_MotorCar\nvehicleClass_AutoRickshaw\nvehicleClass_Agriculture\nvehicleClass_others\nseatCapacity_1_to_3\nseatCapacity_4_to_6\nseatCapacity_above_6\nBrand_new_vehicles\nPre-owned_vehicles\ncategory_Non-Transport\ncategory_Transport\ndistrict\nyear\n\n\n\n\n15_1\n2019-04-01\n17910\n3011\n76\n22\n15308\n4429\n0\n4\n1278\n16110\n4182\n717\n19542\n1477\n19856\n1163\nRangareddy\n2019\n\n\n18_2\n2019-04-01\n3066\n306\n6\n0\n2995\n142\n49\n64\n128\n3156\n189\n33\n3322\n56\n3203\n175\nKamareddy\n2019\n\n\n20_3\n2019-04-01\n1577\n215\n0\n0\n1546\n79\n29\n21\n117\n1683\n104\n5\n1751\n41\n1648\n144\nRajanna Sircilla\n2019\n\n\n\n\n#m.corr()\n\n5.Investigate whether there is any correlation between vehicle sales and specific months or seasons in different districts. Are there any months or seasons that consistently show higher or lower sales rate, and if yes, what could be the driving factors? (Consider Fuel-Type category only)\n\n#columns_to_analyze = ['month', 'district', 'fuel_type_petrol', 'fuel_type_diesel', 'fuel_type_electric', 'fuel_type_others']\n\n\n#data = m[columns_to_analyze].copy()\n#correlation_matrix = data.corr()\n#print(correlation_matrix)\n\n                fuel_type_petrol  fuel_type_diesel  fuel_type_electric  \\\nfuel_type_petrol 1.000000 0.892273 0.598413\nfuel_type_diesel 0.892273 1.000000 0.471648\nfuel_type_electric 0.598413 0.471648 1.000000\nfuel_type_others 0.633747 0.495163 0.530573\n                fuel_type_others  \nfuel_type_petrol 0.633747\nfuel_type_diesel 0.495163\nfuel_type_electric 0.530573\nfuel_type_others 1.000000\n\n#plt.figure(figsize=(10, 8))\n#sns.heatmap(correlation_matrix, annot=True, cmap=\"coolwarm\", fmt=\".2f\")\n#plt.title(\"Correlation Matrix\")\n#plt.show()\n\n\n\n\ncorrelation\n\n\n\n# Group by month and calculate the mean sales for each fuel type\n#monthly_sales = data.groupby('month')[['fuel_type_petrol', 'fuel_type_diesel', 'fuel_type_electric', 'fuel_type_others']].mean()\n\n# Create a bar plot\n#monthly_sales.plot(kind='bar', figsize=(50, 6))\n#plt.title(\"Average Vehicle Sales by Month\")\n#plt.xlabel(\"Month\")\n#plt.ylabel(\"Average Sales\")\n#plt.xticks(rotation=45)\n#plt.legend(title='Fuel Type')\n#plt.show()\n\n\n\n\nSales of vehicles\n\n\nDriving Factors for slow growth in sales in some months Vehicle registrations in Telangana for the year 2020-04-01 reduced drastically due to the COVID-19 pandemic. The lockdown imposed by the government in March 2020 restricted the movement of people and vehicles, which led to a decline in the demand for new vehicles. Additionally, the economic slowdown caused by the pandemic also led to people postponing their plans to buy new vehicles.\nAccording to the Telangana Transport Department, the number of vehicle registrations in the state fell by 56% in April 2020 compared to the same month in the previous year. The decline was even more pronounced in the following months, with registrations falling by 72% in May 2020 and 80% in June 2020.\nHere are some other factors that may have contributed to the decline in vehicle registrations in Telangana in 2020:\nThe increase in the prices of vehicles due to the rise in the cost of raw materials. The shortage of semiconductors, which is a key component in many vehicles. The uncertainty about the future of the economy, which made people hesitant to make major purchases such as a new vehicle.\nThere are a few possible reasons why vehicle registrations in Telangana drastically reduced in May 2021.\nThe COVID-19 pandemic was at its peak in India during this time, and many people were staying home to avoid getting sick. This would have led to a decrease in the demand for new vehicles. The Telangana government increased the registration fees for vehicles in April 2021. This would have made it more expensive to buy a new vehicle, which could have also contributed to the decline in registrations. The Indian economy was also struggling during this time, which could have made it difficult for people to afford to buy a new vehicle. It is also possible that there is another factor that caused the decline in vehicle registrations in Telangana in May 2021. However, the reasons mentioned above are the most likely explanations.\nHere are some additional details about each of the reasons mentioned above:\nThe COVID-19 pandemic caused a nationwide lockdown in India in March 2020. The lockdown was gradually lifted in the following months, but many people were still hesitant to go out and about in public. This would have led to a decrease in the demand for transportation, including new vehicles. The Telangana government increased the registration fees for vehicles in April 2021. The increase was as follows: Three-wheelers: from Rs. 600 to Rs. 2,500 Light motor vehicles: from Rs. 600 to Rs. 5,000 Medium goods vehicles: from Rs. 1,000 to Rs. 1,500 Heavy goods vehicles: from Rs. 1,500 to Rs. 2,000 This increase in registration fees would have made it more expensive to buy a new vehicle, which could have contributed to the decline in registrations.\nThe Indian economy was also struggling during this time due to the COVID-19 pandemic. The unemployment rate rose, and many businesses were forced to close. This would have made it difficult for people to afford to buy a new vehicle.\nHow does the distribution of vehicles vary by vehicle class (MotorCycle, MotorCar, AutoRickshaw, Agriculture) across different districts? Are there any districts with a predominant preference for a specific vehicle class? Consider FY 2022 for analysis.\n\n#data_fy_2022 = m[m['year'] == 2022][['district', 'vehicleClass_MotorCycle', 'vehicleClass_MotorCar', 'vehicleClass_AutoRickshaw', 'vehicleClass_Agriculture']]\n# Group by district and calculate the mean distribution for each vehicle class\n#district_vehicle_distribution = data_fy_2022.groupby('district').mean()\n#plt.figure(figsize=(12, 8))\n#sns.heatmap(district_vehicle_distribution, cmap=\"Blues\", annot=True, fmt=\".2f\")\n#plt.title(\"Vehicle Class Distribution by District (FY 2022)\")\n#plt.xlabel(\"Vehicle Class\")\n#plt.ylabel(\"District\")\n#plt.show()\n\n\n\n\nVehicle class distribution\n\n\n\n# Find the predominant vehicle class for each district\n#predominant_vehicle_class = district_vehicle_distribution.idxmax(axis=1)\n#predominant_vehicle_class\n\ndistrict\nAdilabad vehicleClass_MotorCycle\nBhadradri Kothagudem vehicleClass_MotorCycle\nHyderabad vehicleClass_MotorCycle\nJagtial vehicleClass_MotorCycle\nJangoan vehicleClass_MotorCycle\nJayashankar Bhupalpally vehicleClass_MotorCycle\nJogulamba Gadwal vehicleClass_MotorCycle\nKamareddy vehicleClass_MotorCycle\nKarimnagar vehicleClass_MotorCycle\nKhammam vehicleClass_MotorCycle\nKumurambheem Asifabad vehicleClass_MotorCycle\nMahabubabad vehicleClass_MotorCycle\nMahabubnagar vehicleClass_MotorCycle\nMancherial vehicleClass_MotorCycle\nMedak vehicleClass_MotorCycle\nMedchal_Malkajgiri vehicleClass_MotorCycle\nNagarkurnool vehicleClass_MotorCycle\nNalgonda vehicleClass_MotorCycle\nNirmal vehicleClass_MotorCycle\nNizamabad vehicleClass_MotorCycle\nPeddapalli vehicleClass_MotorCycle\nRajanna Sircilla vehicleClass_MotorCycle\nRangareddy vehicleClass_MotorCycle\nSangareddy vehicleClass_MotorCycle\nSiddipet vehicleClass_MotorCycle\nSuryapet vehicleClass_MotorCycle\nVikarabad vehicleClass_MotorCycle\nWanaparthy vehicleClass_MotorCycle\nWarangal vehicleClass_MotorCycle\nYadadri Bhuvanagiri vehicleClass_MotorCycle\n7.List down the top 3 and bottom 3 districts that have shown the highest and lowest vehicle sales growth during FY 2022 compared to FY 2021? (Consider and compare categories: Petrol, Diesel and Electric)\n\n#df=m\n# Calculate vehicle sales for each district and fuel type in FY 2021 and FY 2022\n#df['sales_petrol_fy2021'] = df['fuel_type_petrol'] * df['year'].apply(lambda x: 1 if x == 2021 else 0)\n#df['sales_petrol_fy2022'] = df['fuel_type_petrol'] * df['year'].apply(lambda x: 1 if x == 2022 else 0)\n\n#df['sales_diesel_fy2021'] = df['fuel_type_diesel'] * df['year'].apply(lambda x: 1 if x == 2021 else 0)\n#df['sales_diesel_fy2022'] = df['fuel_type_diesel'] * df['year'].apply(lambda x: 1 if x == 2022 else 0)\n\n#df['sales_electric_fy2021'] = df['fuel_type_electric'] * df['year'].apply(lambda x: 1 if x == 2021 else 0)\n#df['sales_electric_fy2022'] = df['fuel_type_electric'] * df['year'].apply(lambda x: 1 if x == 2022 else 0)\n\n# Group by district and calculate total sales for each fuel type and year\n#grouped = df.groupby('district').agg(\n#    sales_petrol_fy2021=('sales_petrol_fy2021', 'sum'),\n#    sales_petrol_fy2022=('sales_petrol_fy2022', 'sum'),\n#    sales_diesel_fy2021=('sales_diesel_fy2021', 'sum'),\n#    sales_diesel_fy2022=('sales_diesel_fy2022', 'sum'),\n#    sales_electric_fy2021=('sales_electric_fy2021', 'sum'),\n#    sales_electric_fy2022=('sales_electric_fy2022', 'sum')\n#)\n\n# Calculate growth rate for each fuel type\n#grouped['growth_petrol'] = (grouped['sales_petrol_fy2022'] - grouped['sales_petrol_fy2021']) / grouped['sales_petrol_fy2021']\n#grouped['growth_diesel'] = (grouped['sales_diesel_fy2022'] - grouped['sales_diesel_fy2021']) / grouped['sales_diesel_fy2021']\n#grouped['growth_electric'] = (grouped['sales_electric_fy2022'] - grouped['sales_electric_fy2021']) / grouped['sales_electric_fy2021']\n#grouped.head()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsales_petrol_fy2021\nsales_petrol_fy2022\nsales_diesel_fy2021\nsales_diesel_fy2022\nsales_electric_fy2021\nsales_electric_fy2022\ngrowth_petrol\ngrowth_diesel\n\n\n\n\ndistrict\n\n\n\n\n\n\n\n\n\n\nAdilabad\n17888\n12612\n2280\n2539\n171\n341\n-0.294946\n0.113596\n\n\nBhadradri\nKothagudem\n30750\n21190\n6330\n5569\n30\n238\n-0.310894\n\n\nHyderabad\n238164\n234151\n20783\n21605\n5911\n18276\n-0.016850\n0.039552\n\n\nJagtial\n28259\n16369\n3610\n2264\n251\n593\n-0.420751\n-0.372853\n\n\nJangoan\n14714\n10420\n3726\n2473\n40\n168\n-0.291831\n-0.336286\n\n\n\n\n# Get top 3 and bottom 3 districts for each fuel type based on growth rate\n#top_petrol = grouped.sort_values('growth_petrol', ascending=False).head(3)\n#bottom_petrol = grouped.sort_values('growth_petrol').head(3)\n\n#top_diesel = grouped.sort_values('growth_diesel', ascending=False).head(3)\n#bottom_diesel = grouped.sort_values('growth_diesel').head(3)\n\n#top_electric = grouped.sort_values('growth_electric', ascending=False).head(3)\n#bottom_electric = grouped.sort_values('growth_electric').head(3)\n\n\n#print(\"Top 3 districts with highest petrol sales growth:\")\n#print(top_petrol[['growth_petrol']])\n\n#print(\"\\nBottom 3 districts with lowest petrol sales growth:\")\n#print(bottom_petrol[['growth_petrol']])\n\n#print(\"\\nTop 3 districts with highest diesel sales growth:\")\n#print(top_diesel[['growth_diesel']])\n\n#print(\"\\nBottom 3 districts with lowest diesel sales growth:\")\n#print(bottom_diesel[['growth_diesel']])\n\n#print(\"\\nTop 3 districts with highest electric sales growth:\")\n#print(top_electric[['growth_electric']])\n\n#print(\"\\nBottom 3 districts with lowest electric sales growth:\")\n#print(bottom_electric[['growth_electric']])\n\nTop 3 districts with highest petrol sales growth:\n\n\n\n\ngrowth_petrol\n\n\n\n\ndistrict\n\n\n\nRangareddy\n0.061650\n\n\nHyderabad\n-0.016850\n\n\nMedchal_Malkajgiri\n-0.044339\n\n\n\nBottom 3 districts with lowest petrol sales growth:\n\n\n\n\ngrowth_petrol\n\n\n\n\ndistrict\n\n\n\nWarangal\n-0.547441\n\n\nJagtial\n-0.420751\n\n\nJayashankar Bhupalpally\n-0.391166\n\n\n\nTop 3 districts with highest diesel sales growth:\n\n\n\n\ngrowth_diesel\n\n\n\n\ndistrict\n\n\n\nKarimnagar\n1.101447\n\n\nRangareddy\n0.207711\n\n\nSangareddy\n0.137153\n\n\n\nBottom 3 districts with lowest diesel sales growth:\n\n\n\n\ngrowth_diesel\n\n\n\n\ndistrict\n\n\n\nWarangal\n-0.612469\n\n\nJagtial\n-0.372853\n\n\nMahabubabad\n-0.350363\n\n\n\nTop 3 districts with highest electric sales growth:\n\n\n\n\ngrowth_electric\n\n\n\n\ndistrict\n\n\n\nBhadradri Kothagudem\n6.933333\n\n\nKhammam\n6.070423\n\n\nMahabubabad\n4.857143\n\n\n\nBottom 3 districts with lowest electric sales growth:\n\n\n\n\ngrowth_electric\n\n\n\n\ndistrict\n\n\n\nRajanna Sircilla\n0.193252\n\n\nMahabubnagar\n0.211765\n\n\nWanaparthy\n0.697917\n\n\n\nTs-Ipass Data Analysis\n\n#from pandas.core.indexes.period import DatetimeIndex\n#m=fact_TS_ipass.merge(dim_districts,on=\"dist_code\",how=\"left\")\n#m[\"year\"]=DatetimeIndex(m.month).year\n#m.info()\n\n&lt;class ‘pandas.core.frame.DataFrame’&gt;\nInt64Index: 5753 entries, 0 to 5752\nData columns (total 7 columns):\n# Column Non-Null Count Dtype\n\n0 dist_code 5753 non-null object\n1 month 5753 non-null object\n2 sector 5753 non-null object\n3 investment in cr 5753 non-null float64\n4 number_of_employees 5753 non-null int64\n5 district 5753 non-null object\n6 year 5753 non-null int64\ndtypes: float64(1), int64(2), object(4)\n8.List down the top 5 sectors that have witnessed the most significant investments in FY 2022.\n\n#fy22=m[(m[\"year\"]==2022)]\n#a=fy22.groupby(['sector'])['investment in cr'].sum().reset_index()\n#a.head()\n\n\n\n\nsector\ninvestment in cr\n\n\n\n\nAgro based incl Cold Storages\n1033.2048\n\n\nAutomobile\n305.8881\n\n\nBeverages\n1848.1920\n\n\nCement, Cement & Concrete Products, Fly Ash Br…\n1066.1876\n\n\nElectrical and Electronic Products\n318.9721\n\n\n\n\n9.List down the top 3 districts that have attracted the most significant sector investments during FY 2019 to 2022? What factors could have led to the substantial investments in these particular districts?\n\n#fy19_22=m[(m[\"year\"]!=2023)]\n#a=fy19_22.groupby([\"district\"])[\"investment in cr\"].sum().reset_index()\n#b=a.sort_values(\"investment in cr\",ascending=False).head(3)\n#b\n\n\n\n\ndistrict\ninvestment in cr\n\n\n\n\nRangareddy\n40984.2759\n\n\nMedchal_Malkajgiri\n9987.2529\n\n\nSangareddy\n8955.4081\n\n\n\n\n10.Is there any relationship between district investments, vehicles sales and stamps revenue within the same district between FY 2021 and 2022?\n\n#m1=fact_stamps[[\"dist_code\",\"estamps_challans_rev\"]]\n#m2=fact_transport\n#m3=fact_TS_ipass[['dist_code','investment in cr']]\n#merged_df = pd.merge(m1,m2, on=['dist_code'], how='inner')\n#merged_df = pd.merge(merged_df,m3, on=['dist_code'], how='inner')\n#merged_df[\"year\"]=DatetimeIndex(merged_df.month).year\n#merged_df.shape\n\n(12457632, 21)\n\n#fy_2021_2022 = merged_df[(merged_df['year'] == 2021) | (merged_df['year'] == 2022)]\n\n# Calculate correlations, trends, or descriptive statistics\n#correlation_matrix = fy_2021_2022[['investment in cr', 'vehicleClass_MotorCar', 'estamps_challans_rev']].corr()\n\n# Print correlation matrix or perform other analysis\n#print(correlation_matrix)\n\n\n\n\n\ninvestment in cr\nvehicleClass_MotorCar\n\n\n\n\ninvestment in cr\n1.000000\n0.070305\n\n\nvehicleClass_MotorCar\n0.070305\n1.000000\n\n\nestamps_challans_rev\n0.058351\n0.648972\n\n\n\n\n\n\n\nestamps_challans_rev\n\n\n\n\ninvestment in cr\n0.058351\n\n\nvehicleClass_MotorCar\n0.648972\n\n\nestamps_challans_rev\n1.000000\n\n\n\n\n#plt.figure(figsize=(10, 8))\n#sns.heatmap(correlation_matrix, annot=True, cmap=\"coolwarm\", fmt=\".2f\")\n#plt.title(\"Correlation Matrix\")\n#plt.show()\n\n\n\n\ncorrelation\n\n\n11.Are there any particular sectors that have shown substantial investment in multiple districts between FY 2021 and 2022?\n\n#fy21_22 = m[(m['year'] == 2021) | (m['year'] == 2022)]\n#fy21_22.head()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndist_code\nmonth sector\ninvestment\nin cr\nnumber_of_employees\ndistrict\nyear\n\n\n\n\n2381\n15_2\n01-01-2021\nGranite and Stone Crushing\n0.2500\n5\nMedchal_Malkajgiri\n2021\n\n\n2382\n20_1\n01-01-2021\nAgro based incl Cold Storages\n0.8100\n28\nKarimnagar\n2021\n\n\n2383\n20_3\n01-01-2021\nAgro based incl Cold Storages\n1.7250\n63\nRajanna Sircilla\n2021\n\n\n2384\n19_1\n01-01-2021\nCement, Cement & Concrete Products, Fly Ash Br…\n0.0700\n5\nAdilabad\n2021\n\n\n2385\n20_2\n01-01-2021\nAgro based incl Cold Storages\n2.5765\n60\nJagtial\n2021\n\n\n\n\n#grouped = fy21_22.groupby(['sector', 'district'])['investment in cr'].sum()\n#substantial_investments = grouped[grouped &gt; 100]\n\n# Reset index to turn the groupby result into a DataFrame\n#substantial_investments_df = substantial_investments.reset_index()\n#substantial_investments_df.head()\n\n\n\n\n\nsector\ndistrict\ninvestment\nin cr\n\n\n\n\n0\nAgro based incl Cold Storages\nMedchal_Malkajgiri\n358.2581\n\n\n\n1\nAgro based incl Cold Storages\nSiddipet\n572.0519\n\n\n\n2\nAutomobile\nRangareddy\n275.4781\n\n\n\n3\nBeverages\nNarayanpet\n1455.0000\n\n\n\n4\nBeverages\nSangareddy\n326.4069\n\n\n\n\n 12.Can we identify any seasonal patterns or cyclicality in the investment trends for specific sectors? Do certain sectors experience higher investments during particular months?\n\n#grouped = fact_TS_ipass.groupby(['sector', 'month'])['investment in cr'].mean()\n\n# Reset index to turn the groupby result into a DataFrame\n#investment_by_sector_month = grouped.reset_index()\n\n# Create a pivot table for visualization\n#pivot_table = investment_by_sector_month.pivot_table(index='month', columns='sector', values='investment in cr', aggfunc='mean')\n\n\n#plt.figure(figsize=(50, 20))\n#sns.heatmap(pivot_table, cmap='YlGnBu', annot=True, fmt=\".2f\")\n#plt.title('Investment Trends by Sector and Month')\n#plt.xlabel('Sector')\n#plt.ylabel('Month')\n#plt.xticks(rotation=45, ha='right')\n#plt.tight_layout()\n#plt.show()\n\n\n\n\nsector Seasonal Patterns\n\n\nThe increase in sectors that had increased in particular months are\n1.Fertilizers in 01-12-2019\n2.Automobile in 01-01-2023\n3.Real Estate in 01-01-2022\nMaximum the real estate is the happen to see a seasonal investment for every year with increase in investment every year\nSecondary Research: (Need additional research and get additional data)\n1.What are the top 5 districts to buy commercial properties in Telangana? Justify your answer.\n\n#a=[\"Real Estate, Industrial Parks and IT Buildings\",\"Industrial Parks and IT Buildings\",\"Agro based incl Cold Storages\"]\n#commercial_data = m[m['sector'].isin(a)]\n\n# Group data by district and calculate the total investments\n#district_investments = commercial_data.groupby('district')['investment in cr'].sum()\n#district_investments\n\ndistrict\nAdilabad 2.2500\nBhadradri Kothagudem 8.6496\nHanumakonda 0.6700\nHyderabad 0.1150\nJagtial 34.1134\nJangoan 17.2365\nJayashankar Bhupalpally 1.0200\nJogulamba Gadwal 3.7085\nKamareddy 39.7736\nKarimnagar 29.2580\nKhammam 146.7360\nKumurambheem Asifabad 0.0500\nMahabubabad 21.7659\nMahabubnagar 70.4528\nMancherial 1.7825\nMedak 73.9177\nMedchal_Malkajgiri 450.3329\nMulugu 0.8218\nNagarkurnool 23.5549\nNalgonda 25.0514\nNarayanpet 62.9028\nNirmal 24.5042\nNizamabad 45.1248\nPeddapalli 10.2509\nRajanna Sircilla 28.3388\nRangareddy 357.3141\nSangareddy 76.9769\nSiddipet 734.0076\nSuryapet 4.6157\nVikarabad 12.9320\nWanaparthy 8.7885\nWarangal 34.7529\nYadadri Bhuvanagiri 29.1078\n\n#top_districts = district_investments.sort_values(ascending=False).head(5)\n\ndistrict\nSiddipet 734.0076\nMedchal_Malkajgiri 450.3329\nRangareddy 357.3141\nKhammam 146.7360\nSangareddy 76.9769\n2.What significant policies or initiatives were put into effect to enhance economic growth, investments, and employment in Telangana by the current government? Can we quantify the impact of these policies using available data?\nIndustrial Policy Framework: The Telangana government introduced an industrial policy that aims to promote industrialization and attract investments across various sectors. This policy includes incentives and concessions for industries setting up in the state.\nTS-iPASS (Industrial Project Approval and Self-Certification System): TS-iPASS is an initiative to provide speedy and transparent approvals for setting up industries in Telangana. It simplifies the approval process and aims to create a business-friendly environment.\nT-Hub: T-Hub is a start up incubator and accelerator that fosters innovation and entrepreneurship. It provides a platform for start ups to collaborate, learn, and scale their businesses.\nMission Bhagiratha: This project focuses on providing safe drinking water to every household in Telangana. Access to clean water infrastructure can improve health and living conditions, indirectly supporting economic growth.\nRythu Bandhu Scheme: This scheme provides financial assistance to farmers in the form of investment support before the crop season. It aims to ensure farmers’ economic stability and enhance agricultural productivity.\nTelangana State Innovation Cell (TSIC): TSIC promotes innovation and research in various sectors. It supports start ups, provides training, and encourages the development of innovative solutions.\nThese policies helped the investments raising and clearance of industry establishment in the state.\nAs the data of the TS-iPASS shows the steady growth of investments increased especially in the real estate , Pharmaceuticals, solar and renewable energy,etc.\n3.Provide top 5 Insights & 5 recommendations to Telangana government for sustained growth in the next 5 years based on your analysis.\n5 Insights\n1.The investments in the state in constantly increasing\n2.Utilization of technology is increasing in every sector\n3.The people buying power is constantly increasing\n4.Companies are more interested in establishing their companies\n5.Investment in R&D is not increasing variably and needs improvement.\nRecommendation 1: Support Local Businesses\nPromote local entrepreneurship and small businesses by providing incentives, access to capital, and mentor ship programs. Encourage the growth of local industries to ensure that the benefits of increased buying power stay within the state.\nRecommendation 2: Ease of Doing Business\nContinue to improve the ease of doing business in the state by reducing bureaucratic red tape, simplifying regulations, and streamlining permit processes. Creating a business-friendly environment will attract more companies and foster economic growth.\nRecommendation 3: Research and Innovation Hubs\nEstablish research and innovation hubs in collaboration with academic institutions and industry partners. Provide grants, tax incentives, and resources to encourage research and development across various sectors. Invest in innovation to drive long-term economic growth.\nRecommendation 4: Sustainable Agriculture Practices\nPromote and subsidize the adoption of sustainable and organic farming practices. Encourage farmers to use organic fertilizers, reduce chemical pesticide use, and implement water-saving techniques. This will enhance food production while safeguarding the environment.\nRecommendation 5: Infrastructure Development\nInvest in infrastructure development, including transportation, energy, and logistics. Improved infrastructure can reduce costs for businesses, enhance connectivity, and facilitate the movement of goods and services, ultimately boosting economic growth."
  },
  {
    "objectID": "posts/Lung Cancer Detection Using CNN/index.html",
    "href": "posts/Lung Cancer Detection Using CNN/index.html",
    "title": "Lung Cancer Detection using CNN",
    "section": "",
    "text": "Developed a model using Convolution Neural Network(CNN) for lung cancer detection. Implemented data augmentation techniques, such as rotation, flipping, and scaling, to increase the size of the dataset and improve the model’s robustness. Built and trained a CNN model with multiple convolutional and pooling layers to identify patterns in CT scan images and classify them as either cancerous or non-cancerous.\nGithub Link"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Data Analysis for Telegana Government\n\n\n\n\n\n\nmtnvdsk\n\n\nSep 28, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCryptocurrency Price Analytics using AI\n\n\n\n\n\n\nmtnvdsk\n\n\nApr 10, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLung Cancer Detection using CNN\n\n\n\n\n\n\nmtnvdsk\n\n\nMay 13, 2022\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "resume.html",
    "href": "resume.html",
    "title": "mtnvdsk",
    "section": "",
    "text": "&lt;p&gt;&lt;/iframe&gt;&lt;/p&gt;\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;mtnvdsk&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;mtnvdsk&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:Home\"&gt;Home&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/mtnvdsk.html\"&gt;/mtnvdsk.html&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:projects\"&gt;projects&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/projects.html\"&gt;/projects.html&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:resume\"&gt;resume&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/resume.html\"&gt;/resume.html&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:https://github.com/mtnvdsk\"&gt;https://github.com/mtnvdsk&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:https://twitter.com/mtnvdsk\"&gt;https://twitter.com/mtnvdsk&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-center\"&gt;&lt;a href=\"mailto:mtnvdsk@gmail.com\"&gt;Contact mtnvdsk&lt;/a&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;&lt;a href=\"https://github.com/mtnvdsk\"&gt;Github Code Repo&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;mtnvdsk&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const disableStylesheet = (stylesheets) =&gt; {\n    for (let i=0; i &lt; stylesheets.length; i++) {\n      const stylesheet = stylesheets[i];\n      stylesheet.rel = 'prefetch';\n    }\n  }\n  const enableStylesheet = (stylesheets) =&gt; {\n    for (let i=0; i &lt; stylesheets.length; i++) {\n      const stylesheet = stylesheets[i];\n      stylesheet.rel = 'stylesheet';\n    }\n  }\n  const manageTransitions = (selector, allowTransitions) =&gt; {\n    const els = window.document.querySelectorAll(selector);\n    for (let i=0; i &lt; els.length; i++) {\n      const el = els[i];\n      if (allowTransitions) {\n        el.classList.remove('notransition');\n      } else {\n        el.classList.add('notransition');\n      }\n    }\n  }\n  const toggleColorMode = (alternate) =&gt; {\n    // Switch the stylesheets\n    const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');\n    manageTransitions('#quarto-margin-sidebar .nav-link', false);\n    if (alternate) {\n      enableStylesheet(alternateStylesheets);\n      for (const sheetNode of alternateStylesheets) {\n        if (sheetNode.id === \"quarto-bootstrap\") {\n          toggleBodyColorMode(sheetNode);\n        }\n      }\n    } else {\n      disableStylesheet(alternateStylesheets);\n      toggleBodyColorPrimary();\n    }\n    manageTransitions('#quarto-margin-sidebar .nav-link', true);\n    // Switch the toggles\n    const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');\n    for (let i=0; i &lt; toggles.length; i++) {\n      const toggle = toggles[i];\n      if (toggle) {\n        if (alternate) {\n          toggle.classList.add(\"alternate\");     \n        } else {\n          toggle.classList.remove(\"alternate\");\n        }\n      }\n    }\n    // Hack to workaround the fact that safari doesn't\n    // properly recolor the scrollbar when toggling (#1455)\n    if (navigator.userAgent.indexOf('Safari') &gt; 0 && navigator.userAgent.indexOf('Chrome') == -1) {\n      manageTransitions(\"body\", false);\n      window.scrollTo(0, 1);\n      setTimeout(() =&gt; {\n        window.scrollTo(0, 0);\n        manageTransitions(\"body\", true);\n      }, 40);  \n    }\n  }\n  const isFileUrl = () =&gt; { \n    return window.location.protocol === 'file:';\n  }\n  const hasAlternateSentinel = () =&gt; {  \n    let styleSentinel = getColorSchemeSentinel();\n    if (styleSentinel !== null) {\n      return styleSentinel === \"alternate\";\n    } else {\n      return false;\n    }\n  }\n  const setStyleSentinel = (alternate) =&gt; {\n    const value = alternate ? \"alternate\" : \"default\";\n    if (!isFileUrl()) {\n      window.localStorage.setItem(\"quarto-color-scheme\", value);\n    } else {\n      localAlternateSentinel = value;\n    }\n  }\n  const getColorSchemeSentinel = () =&gt; {\n    if (!isFileUrl()) {\n      const storageValue = window.localStorage.getItem(\"quarto-color-scheme\");\n      return storageValue != null ? storageValue : localAlternateSentinel;\n    } else {\n      return localAlternateSentinel;\n    }\n  }\n  let localAlternateSentinel = 'default';\n  // Dark / light mode switch\n  window.quartoToggleColorScheme = () =&gt; {\n    // Read the current dark / light value \n    let toAlternate = !hasAlternateSentinel();\n    toggleColorMode(toAlternate);\n    setStyleSentinel(toAlternate);\n  };\n  // Ensure there is a toggle, if there isn't float one in the top right\n  if (window.document.querySelector('.quarto-color-scheme-toggle') === null) {\n    const a = window.document.createElement('a');\n    a.classList.add('top-right');\n    a.classList.add('quarto-color-scheme-toggle');\n    a.href = \"\";\n    a.onclick = function() { try { window.quartoToggleColorScheme(); } catch {} return false; };\n    const i = window.document.createElement(\"i\");\n    i.classList.add('bi');\n    a.appendChild(i);\n    window.document.body.appendChild(a);\n  }\n  // Switch to dark mode if need be\n  if (hasAlternateSentinel()) {\n    toggleColorMode(true);\n  } else {\n    toggleColorMode(false);\n  }\n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &nbsp;\n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &lt;div class='footer-contents'&gt;[Contact mtnvdsk](mailto:mtnvdsk@gmail.com)\n&lt;/div&gt;  \n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;[Github Code Repo](https://github.com/mtnvdsk)\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  }
]